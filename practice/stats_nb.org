#+title: Statistical functions in R
#+author: Marcus Birkenkrahe
#+subtitle: Practice notebook for DSC 205 Spring 2022
#+options: toc:nil ^:nil
#+startup: hideblocks overview
#+PROPERTY: header-args:R :exports both
** README

   In this notebook, you're learning and practicing how to set the
   repository for R package uploads and upgrades using a
   self-written function, and use the function in the ~.Rprofile~
   init file for R.

** Standard notebook instructions

   * [ ] Work through this notebook at your own pace. When you're
     done, check a task off by typing ~C-c C-c~ on the line with the
     bullet point. Check this task off for practice!

   * [ ] You can close bullet points with the ~<TAB>~ key on your
     keyboard to reduce the clutter on the screen. Close this long
     paragraph now by going to the line with the bullet point ~*~ in
     it, then check the task off.

   * [ ] Make sure that you can run R in this buffer by executing the
     code block below (~C-c C-c~ with the cursor ON the block) and
     then save the file (~C-x C-s~).
     #+name: helloworld
     #+begin_src R :session :results output
       print("hello world")
     #+end_src

   * [ ] Sometimes, you want to check what happened in the R session
     buffer. Make sure that you find that buffer (e.g. ~C-x C-b~ for
     ~list-buffers~).

   * [ ] Practice: go to the buffer ~*R*~ now, and run the command
     shown below, then come back here again.

     #+begin_example R
       search()
     #+end_example

     Did you know what this command would do? Do you recognize the
     output in the session buffer? If not, type ~?search~ for help,
     then return here again to continue.

   * [ ] In case you have multiple buffers open: remember that ~C-x 1~
     closes all but the current buffer, and ~C-x o~ cycles through
     them.

   * [ ] If you have any trouble with executing the ~hello world~
     program, analyze the problem by yourself first. Typical sources
     of errors are:
     - Can you write to the current directory? (Windows may forbid it)
     - Is this file an Org-file? (Syntax highlighting/modeline check)
     - Did you use the correct key sequence? (Check caps lock e.g.)
     - Do you have the right code block header arguments? (You only
       need ~:session :results output~ for now.
     - Are you working with an old ~*R*~ session and writing to some
       far-flung directory? (check with ~getwd()~ and reset with
       ~setwd()~).

** Statistical functions

   * This challenge is part of an [[https://drive.google.com/drive/folders/1A8yl4cnFhh-1sPO6gdb13DwEzUDDW7t1?usp=sharing][interactive notebook]] - ~stats_nb.org~

   * There are many measures to determine data set patterns, including:
     the average, the median, the interquartile range/range, the
     variance, and the standard deviation[fn:1].

   * [ ] Define a vector ~x <- c(1,2,9)~. In the following code block,
     compute for ~x~:
     1) the ~mean~
     2) the ~median~
     3) the statistical ~summary~
     4) the interquartile range
     5) the ~range~
     6) the sample variance
     7) the population variance
     8) the sample standard deviation

     #+name: measures
     #+begin_src R :session

     #+end_src


   * Notice the difference between population and sample measures -
     sample-based values are larger[fn:2].

   * It is important to get at least an intuitive understanding of
     these measures (mathematical knowledge is to be preferred).

   * Example: variance - a measure of the average distance
     of values from the mean $\mu$.

     #+caption: Definition of variance (Source: HeadFirst Stats)
     #+attr_html: :width 500px
     [[./img/variance.png]]

     * The ~median~ is the middle value in a sorted list
     * The ~mean~ is the average value
     * The interquartile range ~IQR~ is the spread of the middle half
       of your distribution (values 25% below and above the mean)
     * The ~range~ is the distance between min and max value
     * The variance $\sigma^2$ (~var~) is the average distance from the
       mean squared (to avoid cancellation)
     * The standard deviation $\sigma$ (~sd~) corresponds to the spread
       of values around the mean

   * [ ] Compute some examples:
     1) Take a look at the structure of the built-in dataset
        ~faithful~. (Check out the dataset help.)
     2) What is the average time between eruptions of the Old
        Faithful geyser in Yellowstone Nat'l Park in minutes?

     #+name: faithful
     #+begin_src R :exports both :session :results output

     #+end_src

     * [ ] R distinguishes two usages of ~mean~: one takes only one
       argument "without default" and has an "ellipsis". The other one
       is a "default S3 method". What do these terms mean?[fn:3]

     * [ ] Can you compute the average of a vector when there are
       missing values, ~NA~ in it? What is the ~mean~ of
       ~c(3,5,6,23,55,NA,67,NA)~?

       #+name: NA
       #+begin_src R :exports both :session :results output

       #+end_src

   * [ ] What does ~trim=1.0~ do? (Check the man page.).
     1) Define pseudo-random numbers ~y <- abs(10*rnorm(10))~
     2) Plot ~y~ as a graph with lines and bullet points
     3) Compute averages for ~trim~ values 0, 0.25, .5 and 1

     #+name: trim
     #+begin_src R :exports both :session :results output

     #+end_src

   * [ ] Programming assignment for extra credit until Wednesday!
     Consider a sample of 20 observations:

     #+name: sample
     #+begin_example
         39 92 75 61 45 87 59 51 87 12  8 93 74 16 32 39 87 12 47 50
     #+end_example

     1) put the sample in a vector

     2) plot the density distribution ~density~ of the vector

     3) ~sort~ the values and print the vector

     4) plot the density distribution ~density~ of the vector - do you
        expect a difference to the first plot?

     5) compute the mean and draw a red line into the plot

     6) write a function so that you can enter different ~trim~ values

     7) compute the mean again twice more for ~trim~ values 0.2 and 0.5

     8) draw the trimmed mean value with different colors (blue,green)

     9) Interpret the results

     10) Can you visualize the trimmed values?

     #+begin_src R :exports both :session :results output

     #+end_src
* References

  * Matloff (Aug 26, 2021). fasteR: Fast Lane to Learning R! 16:
    Writing your own functions [website]. [[https://github.com/matloff/fasteR][URL: github.com/matloff.]]
  * <<S3>> Wickham (2014). Advanced R: The S3 object system. CRC
    Press. [[http://adv-r.had.co.nz/S3.html][URL: adv-r.had.co.nz]].

* Footnotes

[fn:3]This was mentioned, but not explained, in a DataCamp lesson. For
more details on S3 methods with examples, see [[S3][Wickham (2014)]]. The
onboard explanation is technically quite difficult. You need to
already understand the basics of OOP to understand this at all -
e.g. from Java, C++ or my introduction to R.

[fn:2]The population measure is based on the total number of samples
$N$, while the sample measure is based on $N-1$.

[fn:1]I cannot explain why ~paste~ does not respect the digits setting
default (7 digits). Alternatives I found include the functions
~format~ and ~sprintf~, e.g. ~sprintf("%0.2f%%",sd(x))~ works.
