#+TITLE:FAQ
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:Frequently Asked Questions
#+STARTUP:overview
#+OPTIONS:hideblocks
* What is this?

  This is a Frequently Asked Questions (FAQ) file for this course. For
  the FAQs across courses, see the [[https://github.com/birkenkrahe/org][org repo]].

* Can you render animated graphics inside Emacs?

  Animations - including GIFs - cannot be rendered inside Emacs, I
  believe, (you can see open devices in R with ~dev.list()~). Those
  are devices outside of Emacs run by the windows manager. Also, I
  might do gganimate now or I might leave it for the DataViz course
  next term. Simply because it isn't all that important. Most data
  are difficult enough to understand without animation, and the
  added value is often not there. It's a superficial pleasure to see
  things moving (the eye likes it - but visualization is only
  superficially for the eye). There are exceptions but one needs to
  check in each case if running images add value.

* Setting the path to R for Emacs in ~.emacs~

  If you cannot set the path to R using the ~PATH~ variable (e.g. in
  the PC lab), you can give the explicit location of the R executable
  by putting this code into your ~.emacs~ file:

  #+begin_src emacs-lisp
    ;; set the path to R for ESS
    (setq inferior-ess-r-program "c:/Program Files/R/R-4.1.2/bin/R.exe")
  #+end_src

  However, on your personal computer, setting adding the absolute
  address to the folder with ~R.exe~ in it to the ~PATH~ variable will
  enable Emacs to find R. You can test this in the terminal with the command

  #+begin_example
  emacs -f R
  #+end_example

  For this to work, ~emacs~ must be in your ~PATH~, too - otherwise
  you have to type the path yourself like this:

  #+begin_example
  "c:\User\YourName\Program Files\GNU Emacs 27\bin\emacs"
  #+end_example
