#+title: Save and load user-defined functions
#+author: Marcus Birkenkrahe
#+options: toc:nil ^:nil
#+startup: hideblocks overview
** README

   * [ ] Work through this notebook at your own pace. When you're
     done, check a task off by typing ~C-c C-c~ on the line with the
     bullet point. Check this task off for practice!

   * [ ] You can close bullet points with the ~<TAB>~ key on your
     keyboard to reduce the clutter on the screen. Close this long
     paragraph now by going to the line with the bullet point ~*~ in
     it, then check the task off.

   * [ ] Make sure that you can run R in this buffer by executing the
     code block below (~C-c C-c~ with the cursor ON the block) and
     then save the file (~C-x C-s~).
     #+name: helloworld
     #+begin_src R :session :results output
       print("hello world")
     #+end_src

   * [ ] Sometimes, you want to check what happened in the R session
     buffer. Make sure that you find that buffer (e.g. ~C-x C-b~ for
     ~list-buffers~). Go to the buffer ~*R*~ now, and run the command
     shown below, then come back here again.
     #+begin_example
       search()
     #+end_example
     Did you know what this command would do? Do you recognize the
     output in the session buffer? If not, type ~?search~ for help,
     then return here again to continue.

   * [ ] In case you have multiple buffers open: remember that ~C-x 1~
     closes all but the current buffer, and ~C-x o~ cycles through
     them[fn:1].
   
   * [ ] If you have any trouble with executing the ~hello world~
     program, analyze the problem by yourself first. Typical sources
     of errors are:
     - Can you write to the current directory? (Windows may forbid it)
     - Is this file an Org-file? (Syntax highlighting/modeline check)
     - Did you use the correct key sequence? (Check caps lock e.g.)
     - Do you have the right code block header arguments? (You only
       need ~:session :results output~ for now.

   * [ ] Now, we're going to do learn how to save and load our own
     functions, and then we're going to write two functions and test
     it.

** Theory: saving and loading functions

   * [ ] Functions can be saved for later use. The following code
     saves the function 

   * [ ] Do you have any questions or corrections for me about this?
     If there's anything you don't understand (including technical
     terms), please ask and don't be shy!

** Practice

* Footnotes

[fn:1]Tip: I have loaded the more comfortable ~ace-window~ package
with the Emacs package manager, and added the following lines to my
~.emacs~ file:
#+begin_example
;; smarter window changing
(require 'ace-window)

;; enable ace-window for fast window switching
(global-set-key (kbd "M-o") 'ace-window)

;; show ace window key in mode line
;; with > 2 windows show it in red
(ace-window-display-mode 1) 
#+end_example
